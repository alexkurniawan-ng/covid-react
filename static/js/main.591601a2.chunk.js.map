{"version":3,"sources":["component/navbar.js","support/backend_url.js","component/cardInfoIndonesia.js","component/cardInfoWorld.js","component/carousel.js","component/jumbotron.js","pages/homePages.js","component/cardProvinsi.js","pages/provincePages.js","pages/404NotFound.js","component/cardCountries.js","pages/countryPages.js","pages/countriesDetail.js","component/footer.js","App.js","serviceWorker.js","index.js"],"names":["NavbarComp","props","btCollapse","setState","collapsed","state","Navbar","color","light","expand","NavbarBrand","className","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","to","Component","API_URL","API_URL_IDN","IndoInfo","getData","Axios","get","then","res","dataIndo","data","catch","err","console","log","jumlahKasus","toLocaleString","perawatan","sembuh","meninggal","WorldInfo","dataWorld","confirmed","value","recovered","deaths","CarouselComp","renderCarousel","info","map","item","index","key","src","style","height","alt","id","data-ride","href","role","data-slide","aria-hidden","Jumbo","Jumbotron","Button","Home","CardProvinsi","provinsi","kasusPosi","kasusSemb","kasusMeni","Province","getDataProvince","dataProvinsi","renderCard","NotFound","class","name","iso3","Countries","getDataCountries","dataCountries","countries","caseCountries","CountriesDetail","getDetail","params","match","iso","getAllDetail","detail","url","allData","renderAllData","combinedKey","active","overflow","border","FooterComp","App","path","component","exact","React","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.591601a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, NavItem, Nav } from 'reactstrap';\r\n\r\nclass NavbarComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            collapsed: false\r\n        }\r\n    }\r\n\r\n    btCollapse = () => {\r\n        this.setState({ collapsed: !this.state.collapsed })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Navbar color=\"faded\" light expand=\"md\">\r\n                    <NavbarBrand className=\"mr-auto\">Covid19</NavbarBrand>\r\n                    <NavbarToggler onClick={this.btCollapse} className=\"mr-2\"></NavbarToggler>\r\n                    <Collapse isOpen={this.state.collapsed} navbar>\r\n                        <Nav>\r\n                            <NavItem>\r\n                                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavItem>\r\n                                <Link to=\"/province\" className=\"nav-link\">Province</Link>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavItem>\r\n                                <Link to=\"/countries\" className=\"nav-link\">Countries</Link>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavbarComp;","export const API_URL = \"https://covid19.mathdro.id\"\r\nexport const API_URL_IDN = \"https://indonesia-covid-19-api.now.sh\"","import React, { Component } from 'react';\r\nimport Axios from 'axios'\r\nimport { API_URL_IDN } from '../support/backend_url'\r\n\r\n// const API_URL_INA = \"https://indonesia-covid-19-api.now.sh\"\r\nclass IndoInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dataIndo: {}\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        Axios.get(API_URL_IDN + '/api')\r\n        .then((res) => {\r\n            // console.log('GET success', res.data)\r\n            this.setState({ dataIndo: res.data })\r\n        })\r\n        .catch((err) => {\r\n            console.log('GET error', err)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() { \r\n        let {dataIndo} = this.state\r\n        return ( \r\n            <div>\r\n                <h2 className=\"text-center\">Covid-19 Indonesia Summary</h2>\r\n                <hr className=\"my-3\" />\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-warning text-white\">\r\n                                <h5 className=\"card-title\">Confirmed</h5>\r\n                                {\r\n                                    dataIndo.jumlahKasus? \r\n                                    <h2>{dataIndo.jumlahKasus.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-primary text-white\">\r\n                                <h5 className=\"card-title\">Treatment</h5>\r\n                                {\r\n                                    dataIndo.perawatan? \r\n                                    <h2>{dataIndo.perawatan.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-success text-white\">\r\n                                <h5 className=\"card-title\">Recovered</h5>\r\n                                {\r\n                                    dataIndo.sembuh? \r\n                                    <h2>{dataIndo.sembuh.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-danger text-white\">\r\n                                <h5 className=\"card-title\">Deaths</h5>\r\n                                {\r\n                                    dataIndo.meninggal? \r\n                                    <h2>{dataIndo.meninggal.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default IndoInfo;","import React, { Component } from 'react';\r\nimport Axios from 'axios'\r\nimport {  API_URL } from '../support/backend_url'\r\n\r\n// const API_URL = \"https://covid19.mathdro.id\"\r\nclass WorldInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dataWorld: {}\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        Axios.get(API_URL + '/api')\r\n        .then((res) => {\r\n            // console.log('GET success', res.data)\r\n            this.setState({ dataWorld: res.data })\r\n        })\r\n        .catch((err) => {\r\n            console.log('GET error', err)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() { \r\n        let {dataWorld} = this.state\r\n        return ( \r\n            <div>\r\n                <h2 className=\"text-center\">Covid-19 World Summary</h2>\r\n                <hr className=\"my-3\" />\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-danger text-white\">\r\n                                <h5 className=\"card-title\">Confirmed</h5>\r\n                                {\r\n                                    dataWorld.confirmed? \r\n                                    <h2>{dataWorld.confirmed.value.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-success text-white\">\r\n                                <h5 className=\"card-title\">Recovered</h5>\r\n                                {\r\n                                    dataWorld.recovered? \r\n                                    <h2>{dataWorld.recovered.value.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body bg-danger text-white\">\r\n                                <h5 className=\"card-title\">Deaths</h5>\r\n                                {\r\n                                    dataWorld.deaths? \r\n                                    <h2>{dataWorld.deaths.value.toLocaleString()}</h2>\r\n                                    :\r\n                                    <h3>Fetching Data...</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WorldInfo;","import React, { Component } from 'react';\r\n\r\nclass CarouselComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            info: [\"https://pacitankab.go.id/wp-content/uploads/photo_2020-04-23_10-01-35.jpg\", \r\n                    \"https://storage.googleapis.com/pkg-portal-bucket/images/news/2020-03/himbauan-terkait-covid-19/pg_notice-covid-19.png\", \r\n                    \"https://www.piyaman-wonosari.desa.id/assets/files/artikel/sedang_1585210248suspect-virus-corona-driver-ojol-sempat-kabur-dari-karantina-diisolasi-usai-antar-prt-wna-positif.jpg\"\r\n                    ]\r\n        }\r\n    }\r\n\r\n    renderCarousel = () => {\r\n        return this.state.info.map((item, index) => {\r\n            if (index === 0) {\r\n                return(\r\n                    <div key={index} className=\"carousel-item active\">\r\n                        <img className=\"d-block w-100\" src={item} style={{height: 370}} alt={`Slide${index + 1}`} />\r\n                    </div>)\r\n            }\r\n\r\n            return(\r\n                <div key={index} className=\"carousel-item\">\r\n                    <img className=\"d-block w-100\" src={item} style={{height:370}} alt={`Slide${index + 1}`} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div id=\"carouselInfo\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                <div className=\"carousel-inner\">\r\n                    {this.renderCarousel()}\r\n                </div>\r\n                <a className=\"carousel-control-prev\" href=\"#carouselInfo\" role=\"button\" data-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a className=\"carousel-control-next\" href=\"#carouselInfo\" role=\"button\" data-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                </a>\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default CarouselComp;","import React from 'react';\r\nimport { Button, Jumbotron } from 'reactstrap';\r\n\r\nconst Jumbo = (props) => {\r\n    return(\r\n        <div>\r\n            <Jumbotron>\r\n                <h1 className=\"display-3\">Covid <span className=\"text-white\">Info</span></h1>\r\n                <p className=\"lead\">This is Paragraph 1</p>\r\n                <hr className=\"my-2\" />\r\n                <p>This is Paragraph 2</p>\r\n                <p className=\"lead\">\r\n                    <Button color=\"primary\">Learn More</Button>\r\n                </p>\r\n            </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nexport default Jumbo;","import React, { Component } from 'react';\r\nimport IndoInfo from '../component/cardInfoIndonesia';\r\nimport WorldInfo from '../component/cardInfoWorld';\r\nimport CarouselComp from '../component/carousel';\r\nimport Jumbo from '../component/jumbotron';\r\nimport '../assets/style/jumbotron.css'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <CarouselComp />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Jumbo />\r\n                    </div>\r\n                </div>\r\n                <hr className=\"my-3\" />\r\n                <WorldInfo />\r\n                <hr className=\"my-3\" />\r\n                <IndoInfo />\r\n                <hr className=\"my-3\" />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\n\r\nconst CardProvinsi = (props) => {\r\n    return(\r\n        <div className=\"col-12 col-sm-4\" key={props.key}>\r\n            <div className=\"card my-3\">\r\n                <div className=\"card-header\">{props.data.provinsi}</div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">Positif: {props.data.kasusPosi.toLocaleString()}</li>\r\n                    <li className=\"list-group-item\">Sembuh: {props.data.kasusSemb.toLocaleString()}</li>\r\n                    <li className=\"list-group-item\">Meninggal: {props.data.kasusMeni.toLocaleString()}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardProvinsi","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport CardProvinsi from '../component/cardProvinsi';\r\nimport { API_URL_IDN } from '../support/backend_url'\r\n\r\n// const API_URL_IDN = \"https://indonesia-covid-19-api.now.sh\"\r\nclass Province extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dataProvinsi: []\r\n        }\r\n    }\r\n\r\n    getDataProvince = () => {\r\n        Axios.get(API_URL_IDN + '/api/provinsi')\r\n        .then((res) => {\r\n            console.log('GET province success: ', res.data.data)\r\n            this.setState({ dataProvinsi: res.data.data})\r\n        })\r\n        .catch((err) => {\r\n            console.log('getProvince ERR', err)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataProvince()\r\n    }\r\n\r\n    renderCard = () => {\r\n        return this.state.dataProvinsi.map((item, index) => {\r\n            return(\r\n                <CardProvinsi data={item} key={index}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {this.renderCard()}\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Province;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/style/notFound.css';\r\n\r\n\r\nclass NotFound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div id=\"notfound\">\r\n                <div class=\"notfound\">\r\n                    <div class=\"notfound-404\">\r\n                        <h1>Oops!</h1>\r\n                    </div>\r\n                    <h2>404 - Page not found</h2>\r\n                    <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n                    <Link to=\"/\">Go To Homepage</Link>\r\n                </div>\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default (props) => {\r\n    return(\r\n        <div className=\"col-12 col-sm-4\">\r\n            <Link to={`/countries-detail/${props.data.name}/${props.data.iso3}`}>\r\n                <div className=\"card my-2\">\r\n                    <div className=\"card-header\">\r\n                        {props.data.name}\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const CardCountries = (props) => {\r\n//     return(\r\n//         <div className=\"col-12 col-sm-4\">\r\n//             <Link to={`/countries-detail/${props.data.name}/${props.data.iso3}`}>\r\n//                 <div className=\"card\">\r\n//                     <div className=\"card-header\">\r\n//                         {props.data.name}\r\n//                     </div>\r\n//                 </div>\r\n//             </Link>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default CardCountries;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport CardCountries from '../component/cardCountries';\r\nimport { API_URL } from '../support/backend_url'\r\n\r\n// const API_URL = \"https://covid19.mathdro.id\"\r\nclass Countries extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dataCountries: [],\r\n            caseCountries: []\r\n        }\r\n    }\r\n\r\n\r\n    getDataCountries = () => {\r\n        Axios.get(API_URL + \"/api/countries\")\r\n        .then((res) => {\r\n            // console.log('GET success countries: ', res.data.countries)\r\n            this.setState({ dataCountries: res.data.countries})\r\n        })\r\n        .catch((err) => {\r\n            console.log('GET error countries: ', err)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataCountries()\r\n    }\r\n\r\n    renderCard = () => {\r\n        return this.state.dataCountries.map((item, index) => {\r\n            return(\r\n                <CardCountries data={item} key={index}/>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {this.renderCard()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Countries;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { API_URL } from '../support/backend_url'\r\n\r\n// const API_URL = \"https://covid19.mathdro.id\"\r\nclass CountriesDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n                confirmed: 0,\r\n                recovered: 0,\r\n                deaths: 0,\r\n                allData: []\r\n        }\r\n    }\r\n\r\n    getDetail = () => {\r\n        // Untuk mendapatkan data dari paramater url\r\n        let {params} = this.props.match\r\n        Axios.get(API_URL + `/api/countries/${params.iso}`)\r\n        .then((res) => {\r\n            console.log('Get Detail Success: ', res.data)\r\n            let {confirmed, recovered, deaths} = res.data\r\n            this.getAllDetail(confirmed.detail)\r\n            this.setState({ \r\n                confirmed: confirmed.value, \r\n                recovered: recovered.value, \r\n                deaths: deaths.value,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log('Get Detail Error: ', err)\r\n        })\r\n    }\r\n\r\n    getAllDetail = (url) => {\r\n        Axios.get(url)\r\n        .then((res) => {\r\n            console.log(\"get AllDetail success: \", res.data)\r\n            this.setState({allData: res.data})\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"error getAllDetail\", err)\r\n        })\r\n    }   \r\n\r\n    componentDidMount() {\r\n        this.getDetail()\r\n    }\r\n\r\n    renderAllData = () => {\r\n        return this.state.allData.map((item, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.combinedKey}</td>\r\n                    <td>{item.confirmed.toLocaleString()}</td>\r\n                    <td>{item.recovered.toLocaleString()}</td>\r\n                    <td>{item.deaths.toLocaleString()}</td>\r\n                    <td>{item.active.toLocaleString()}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() { \r\n        // Untuk mendapat parameter dari URL lihat this.props.match untuk detailnya\r\n        let { params } = this.props.match\r\n        console.log(this.props.match)\r\n        return ( \r\n            <div className=\"container\"> \r\n                <div className=\"card text-center\">\r\n                    <h5 className=\"card-header\">{params.countries}</h5>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"card bg-info text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Confirmed</h5>\r\n                                        <h2>{this.state.confirmed.toLocaleString()}</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"card bg-success text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Recovered</h5>\r\n                                        <h2>{this.state.recovered.toLocaleString()}</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"card bg-danger text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Deaths</h5>\r\n                                        <h2>{this.state.deaths.toLocaleString()}</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{height:\"60vh\", overflow:\"auto\"}}>\r\n                    <table className=\"table table-hover my-3\" style={{border:\"1px solid black\"}}>\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>City</th>\r\n                                <th>Confirmed</th>\r\n                                <th>Recovered</th>\r\n                                <th>Deaths</th>\r\n                                <th>Active</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <this.renderAllData />\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default CountriesDetail;","import React, { Component } from 'react';\r\n\r\nclass FooterComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"container-fluid\">\r\n                <hr className=\"my-3\" />\r\n                <div className=\"my-4\">\r\n                    ALEX &copy; All rights reserved.\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default FooterComp;","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport NavbarComp from './component/navbar';\nimport Home from './pages/homePages'\nimport Province from './pages/provincePages';\nimport NotFound from './pages/404NotFound';\nimport Countries from './pages/countryPages';\nimport CountriesDetail from './pages/countriesDetail';\nimport FooterComp from './component/footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return ( \n      <div>\n        <NavbarComp />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/province\" component={Province} />\n          <Route path=\"/countries\" component={Countries} />\n          {/* Menerapkan parameter pada path route */}\n          <Route path=\"/countries-detail/:countries/:iso\" component={CountriesDetail} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n        <FooterComp />\n      </div>\n     );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}